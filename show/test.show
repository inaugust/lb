<show name="show">
<instruments>

  <instrument name="8" core="LB1" dimmer="8"/>
  <instrument name="9" core="LB1" dimmer="9"/>
  <instrument name="6" core="LB1" dimmer="6"/>
  <instrument name="7" core="LB1" dimmer="7"/>
  <instrument name="4" core="LB1" dimmer="4"/>
  <instrument name="5" core="LB1" dimmer="5"/>
  <instrument name="2" core="LB1" dimmer="2"/>
  <instrument name="3" core="LB1" dimmer="3"/>
  <instrument name="house1" core="LB1" dimmer="65"/>
  <instrument name="house2" core="LB1" dimmer="66"/>
  <instrument name="house3" core="LB1" dimmer="67"/>
  <instrument name="1" core="LB1" dimmer="1"/>
  <instrument name="10" core="LB1" dimmer="10"/>
</instruments>
<cues>

  <cue name="preshow">
    <instrument name="2" level="50%"/>
    <instrument name="1" level="50%"/>
  </cue>

  <cue name="black">
  </cue>

  <cue name="2">
    <instrument name="2" level="0%"/>
    <instrument name="1" level="100%"/>
  </cue>

  <cue name="house">
    <instrument name="house1" level="100%"/>
    <instrument name="house3" level="100%"/>
    <instrument name="house2" level="100%"/>
  </cue>

  <cue name="1">
    <parent level="50.0%">house</parent>
    <parent level="50.0%">preshow</parent>
    <instrument name="2" level="100%"/>
    <instrument name="1" level="0%"/>
  </cue>

</cues>
<crossfaders>

  <crossfader name="X1" core="LB1"/>
</crossfaders>
<levelfaders>

  <levelfader name="f1" core="LB1"/>
</levelfaders>
<programs>

  <program name="prog4">
    <init>
    </init>
    <step name="step1">
      <transitionfader_set_start cue="moving1" transitionfader="test_fader"/>
      <transitionfader_set_end cue="moving2" transitionfader="test_fader"/>
      <transitionfader_run level="100%" time="5s" transitionfader="test_fader"/>
    </step>
  </program>

  <program name="prog5">
    <init>
      <proc_run id="foo" proc="benchmark"/>
    </init>
  </program>

  <program name="prog2">
    <init>
      <levelfader_load instrument="house1" levelfader="house_fader"/>
    </init>
    <step name="Cue 1">
      <proc_run instruments="moving1, 2, 3" id="foo" proc="chase"/>
    </step>
  </program>

  <program name="prog3">
    <init>
    </init>
    <step name="Cue 1">
      <xf_load cue="1" xf="X1"/>
      <xf_run downtime="4s" uptime="4s" xf="X1"/>
    </step>
    <step name="Cue 2">
      <xf_load cue="2" xf="X1"/>
      <xf_run downtime="3s" uptime="3s" xf="X1"/>
    </step>
    <step name="Cue 1">
      <xf_load cue="1" xf="X1"/>
      <xf_run downtime="2s" uptime="2s" xf="X1"/>
    </step>
    <step name="Cue 2">
      <xf_load cue="2" xf="X1"/>
      <xf_run downtime="1s" uptime="1s" xf="X1"/>
    </step>
    <step name="Cue 1">
      <xf_load cue="1" xf="X1"/>
      <xf_run downtime="0.5s" uptime="0.5s" xf="X1"/>
    </step>
  </program>

  <program name="prog1">
    <init>
      <levelfader_load cue="house" levelfader="house_fader"/>
    </init>
    <step name="House Out">
      <levelfader_run level="0%" time="5s" levelfader="house_fader"/>
    </step>
    <step name="House Up">
      <levelfader_level level="100%" levelfader="house_fader"/>
    </step>
    <step name="House to Half">
      <levelfader_run level="50%" time="5s" levelfader="house_fader"/>
    </step>
  </program>

</programs>
<procedures>

  <procedure name="chase">




# arguments:  instruments (list)

import math, time, string

instruments=map(string.strip, string.split(args['instruments'], ','))

count=0
prev=None
while(self.running):
  ins = lb.instrument[instruments[count]]
  ins.set_attribute(attribute='level', value='100%', source=self.name)
  print ins
  if (prev):
    prev.set_attribute(attribute='level', value='0%', source=self.name)
    print prev
  prev=ins 
  count=count+1
  if (count>=len(instruments)):
    count=0
  time.sleep(0.5)

if (prev):
    prev.set_attribute(attribute='level', value='0%', source=self.name)

  
  
  
  
  </procedure>
  <procedure name="circle">




# arguments:  instrument, center, radius

import math, time, string

instrument=args['instrument']
if type(args['center'])==type('string'):
    center_x, center_y = string.split(args['center'], ',')
    center_x=int(center_x)
    center_y=int(center_y)
else:
    center_x, center_y = args['center']
radius=int(args['radius'])
t=0

while(self.running):
  print 't='+str(t)
  print 'instrument='+str(instrument)
  print center_x+(radius*math.cos(t))
  print center_y+(radius*math.sin(t))
  lb.instrument[instrument].set_attribute(attribute='location',
	value='('+str(math.cos(t))+'ft, '+ str(math.sin(t))+'ft, 0ft)',
	source=self.name)
  t=t+.1
  time.sleep(0.5)

  
  
  
  
  </procedure>
  <procedure name="benchmark">




import math, time, string

ins=[]
for x in range(1,50):
  ins.append(lb.instrument['moving'+str(x)])

s=time.time()
for y in range(1,4*80):
  for x in ins:
    x.set_attribute(attribute='target', value='(10ft, 10ft, 10ft)')
e=time.time()
print 'set', 4*80*50 ,'instruments in ', e-s

  
  
  
  
  </procedure>
</procedures>
</show>
