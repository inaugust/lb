#!/usr/bin/python1.5

import time

import sys
import CORBA
#import CosNaming
import sys,string
import LB, LB__POA

class pci(LB__POA.InstrumentLevelListener):
  def levelChanged (self, evt):
    print "push!"
    #pass

class dummy:
  pass

orb = CORBA.ORB_init(sys.argv, CORBA.ORB_ID)
poa = orb.resolve_initial_references("RootPOA")
#nsi=orb.resolve_initial_references("NameService")
#print nsi
#ns = nsi._narrow(CosNaming.NamingContext)
#print ns
#x=CosNaming.NameComponent("EventChannel","EventChannel")
#x.id="EventChannel"
#x.kind="EventChannel"
#y=[x]
#print ns.list(2)
#ec = ns.resolve(y)

f=open ("/tmp/lb.ior", "r")
ior=f.readline()
f.close()
o = orb.string_to_object(ior)
print o

f = o.getFader('C1')
print f, dir(f)

xf = o.getFader('X1')
print xf, dir(xf)

for n in range(1,1):
  i = o.getInstrument(str(n))
  print i
  servant=pci()
  listener=servant._this()
  print listener
  ior=orb.object_to_string(listener)
  print "Reference for servant:", n
  i.addLevelListener(ior)

class dummy:
  pass

def test_ins():
  num_ins=1024

  attr=dummy()
  attr.attr=LB.attr_level
  attr.value=[0.0]

  ilist=[]
  for x in range(1,num_ins):
    ins=dummy()
    ins.name=str(x)
    ins.attrs=[attr]
    ilist.append(ins)

  cue1=dummy()
  cue1.name='cue1'
  cue1.ins=ilist

  attr=dummy()
  attr.attr=LB.attr_level
  attr.value=[100.0]

  ilist=[]
  for x in range(1,num_ins):
    ins=dummy()
    ins.name=str(x)
    ins.attrs=[attr]
    ilist.append(ins)

  cue2=dummy()
  cue2.name='cue2'
  cue2.ins=ilist

  f.setStartCue(cue1)
  f.setEndCue(cue2)

  f.run(100.0, 5.0)


def test_mov_ins():
  num_ins=50

  attrs=[]

  attr=dummy()
  attr.attr=LB.attr_target
  attr.value=[100.0, 100.0, 0.0]
  attrs.append(attr)

  ilist=[]
  
  for x in range(1,num_ins):
    ins=dummy()
    ins.name='moving'+str(x)
    ins.attrs=attrs
    ilist.append(ins)
  
  cue1=dummy()
  cue1.name='cue1'
  cue1.ins=ilist

  attrs=[]
  attr=dummy()
  attr.attr=LB.attr_target
  attr.value=[100.0, 100.0, 0.0]
  attrs.append(attr)

  ilist=[]
  for x in range(1,num_ins):
    ins=dummy()
    ins.name='moving'+str(x)
    ins.attrs=attrs
    ilist.append(ins)

  cue2=dummy()
  cue2.name='cue2'
  cue2.ins=ilist

  f.setStartCue(cue1)
  f.setEndCue(cue2)

  f.run(100.0, 5.0)

def test_xf():
  num_ins=1024

  attr1=dummy()
  attr1.attr=LB.attr_level
  attr1.value=[100.0]

  attr0=dummy()
  attr0.attr=LB.attr_level
  attr0.value=[0.0]

  ilist=[]
  for x in range(1,num_ins):
    ins=dummy()
    ins.name=str(x)
    if (x % 2):
      ins.attrs=[attr1]
    else:
      ins.attrs=[attr0]
    ilist.append(ins)

  cue1=dummy()
  cue1.name='cue1'
  cue1.ins=ilist

  ilist=[]
  for x in range(1,num_ins):
    ins=dummy()
    ins.name=str(x)
    if (x % 2):
      ins.attrs=[attr0]
    else:
      ins.attrs=[attr1]
    ilist.append(ins)

  cue2=dummy()
  cue2.name='cue2'
  cue2.ins=ilist

  xf.setDownCue(cue1, 5.0);
  xf.setUpCue(cue2, 5.0);

  xf.run(100.0, 5.0)


test_xf()
#print 'sleep'
#time.sleep(20)
#print 'wake'
poa._get_the_POAManager().activate()
orb.run()
