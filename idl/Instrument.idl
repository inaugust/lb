#ifndef _INSTRUMENT_IDL_
#define _INSTRUMENT_IDL_

#include "types.idl"

module LB
{
  interface Instrument : EventSender
  {
    readonly attribute string name;

    AttrList getAttributes();

    void setLevelFromSource (in double level, in string source);
  
    void setLevel (in double level); /* percent */
    double getLevel ();
    void addLevelListener (in EventListener l);
    void removeLevelListener (in EventListener l);

    void setTarget(in double x, in double y, in double z);
    void getTarget(out double x, out double y, out double z);
    void addTargetListener (in EventListener l);
    void removeTargetListener (in EventListener l);

    void setGoboRPM(in double rpm);
    void getGoboRPM(out double rpm);
    void addGoboRPMListener (in EventListener l);
    void removeGoboRPMListener (in EventListener l);


    /*** Intra-core use only ***/

    /* Don't call these from clients, only other cores */
  };

  interface InstrumentFactory
  {
    Instrument createInstrument (in string name, 
				 in ArgList arguments);
  };
};


#endif /* _INSTRUMENT_IDL_ */
